# auto_sync_template.py
import os
import requests
from dotenv import load_dotenv
from urllib.parse import urlparse, parse_qs, urlencode
from {{CONNECTOR_MODULE}} import get_products

load_dotenv()

SHOPIFY_STORE_URL = os.getenv("SHOPIFY_STORE_URL").rstrip("/")
SHOPIFY_API_KEY = os.getenv("SHOPIFY_API_KEY")
SHOPIFY_API_PASSWORD = os.getenv("SHOPIFY_API_PASSWORD")
AFFILIATE_TAG = os.getenv("AFFILIATE_TAG", "")

def add_affiliate_to_url(url, tag):
    if not tag: return url
    parsed = urlparse(url)
    query = parse_qs(parsed.query)
    query['ref'] = tag
    return parsed._replace(query=urlencode(query, doseq=True)).geturl()

def create_or_update_shopify_product(product):
    api_url = f"{SHOPIFY_STORE_URL}/admin/api/2024-01/products.json"
    headers = { "Content-Type": "application/json" }
    product_url_with_affiliate = add_affiliate_to_url(product.get("product_url", ""), AFFILIATE_TAG)
    payload = {
        "product": {
            "title": product["title"],
            "body_html": f"<a href='{product_url_with_affiliate}' target='_blank'>Buy Now</a>",
            "vendor": "{{VENDOR_NAME}}",
            "product_type": "{{PRODUCT_TYPE}}",
            "images": [{"src": product["image"]}],
            "variants": [{
                "price": product["price"].replace("$", "") or "0.00",
                "inventory_quantity": 0,
                "inventory_management": None
            }],
            "status": "active"
        }
    }
    response = requests.post(api_url, auth=(SHOPIFY_API_KEY, SHOPIFY_API_PASSWORD), json=payload, headers=headers)
    print(f"{'✅' if response.status_code == 201 else '❌'} {product['title']}")

def main():
    for product in get_products():
        create_or_update_shopify_product(product)

if __name__ == "__main__":
    main()
