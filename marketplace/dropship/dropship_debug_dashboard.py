# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MpDbQhYOO3_gqQmkZ5GSsxgh3QkUXQ44
"""

import streamlit as st
import sys
import os
import traceback

# Add tara_skills folder to sys.path for imports
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..', 'tara_skills')))

try:
    import go_supps_connector
    import iherb_connector
    import product_sync_manager
    import order_forwarder
except Exception as e:
    st.error(f"Import error: {e}")
    st.text(traceback.format_exc())
    st.stop()

st.title("Tara Dropship Debug Dashboard")

if 'products' not in st.session_state:
    st.session_state['products'] = []

def safe_sync_gosupps():
    try:
        with st.spinner("Fetching GoSupps products..."):
            products = go_supps_connector.fetch_go_supps_products()
            st.write(f"Fetched {len(products)} products.")
        with st.spinner("Formatting products for Shopify..."):
            formatted = product_sync_manager.format_for_shopify(products)
            st.write(f"Formatted {len(formatted)} products.")
        with st.spinner("Pushing products to Shopify..."):
            product_sync_manager.push_to_shopify(formatted)
            st.write("Push complete.")
        st.session_state['products'] = products
        st.success("GoSupps sync complete!")
    except Exception as e:
        st.error(f"Sync error: {e}")
        st.text(traceback.format_exc())

def safe_sync_iherb():
    try:
        with st.spinner("Fetching iHerb products..."):
            products = iherb_connector.fetch_iherb_products()
            st.write(f"Fetched {len(products)} products.")
        with st.spinner("Formatting products for Shopify..."):
            formatted = product_sync_manager.format_for_shopify(products)
            st.write(f"Formatted {len(formatted)} products.")
        with st.spinner("Pushing products to Shopify..."):
            product_sync_manager.push_to_shopify(formatted)
            st.write("Push complete.")
        st.session_state['products'] += products
        st.success("iHerb sync complete!")
    except Exception as e:
        st.error(f"Sync error: {e}")
        st.text(traceback.format_exc())

def safe_forward_order():
    try:
        if st.session_state['products']:
            order_data = {'product_title': st.session_state['products'][0]['title']}
            order_forwarder.forward_order_to_supplier(order_data, supplier="gosupps")
            st.success(f"Forwarded order for {order_data['product_title']}")
        else:
            st.warning("No products synced yet to forward order")
    except Exception as e:
        st.error(f"Order forwarding error: {e}")
        st.text(traceback.format_exc())

st.button("Sync GoSupps Products", on_click=safe_sync_gosupps)
st.button("Sync iHerb Products", on_click=safe_sync_iherb)
st.button("Simulate Order Forwarding", on_click=safe_forward_order)

if st.session_state['products']:
    st.subheader("Synced Products Preview")
    for p in st.session_state['products']:
        st.markdown(f"**{p['title']}** â€” {p['price']}")
        st.image(p['image'], width=120)
else:
    st.info("No products synced yet.")