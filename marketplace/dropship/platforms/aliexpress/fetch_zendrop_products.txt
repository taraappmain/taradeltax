# fetch_zendrop_products.py
from playwright.sync_api import sync_playwright

def fetch_zendrop_products():
    base_url = "{{url}}"
    products = []

    with sync_playwright() as p:
        browser = p.chromium.launch(headless=False)
        context = browser.new_context(
            user_agent=(
                "Mozilla/5.0 (Windows NT 10.0; Win64; x64) "
                "AppleWebKit/537.36 (KHTML, like Gecko) "
                "Chrome/114.0.0.0 Safari/537.36"
            )
        )
        page = context.new_page()

        url = base_url
        while True:
            print(f">>> Loading page: {url}")
            page.goto(url, wait_until="networkidle")

            try:
                page.wait_for_selector("{{product_selector}}", timeout=10000)
            except:
                print("❌ Timeout waiting for product cards.")
                break

            items = page.query_selector_all("{{product_selector}}")

            for item in items:
                title_el = item.query_selector("{{title_selector}}")
                image_el = item.query_selector("{{image_selector}}")
                price_el = item.query_selector("{{price_selector}}")

                if title_el and image_el and price_el:
                    product = {
                        "title": title_el.inner_text().strip(),
                        "image": image_el.get_attribute("src"),
                        "price": price_el.inner_text().strip(),
                        "product_url": url
                    }
                    products.append(product)

            next_link = page.query_selector("li > a.next.i-next")
            if next_link:
                url = next_link.get_attribute("href")
                if not url.startswith("http"):
                    url = "{{url_base}}" + url
            else:
                print("✅ No more pages.")
                break

        browser.close()

    print(f"✅ Total products fetched: {len(products)}")
    return products

if __name__ == "__main__":
    products = fetch_zendrop_products()
    for p in products:
        print(p)
