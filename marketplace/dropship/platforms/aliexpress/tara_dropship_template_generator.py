# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MpDbQhYOO3_gqQmkZ5GSsxgh3QkUXQ44
"""

import os

TEMPLATES_DIR = "templates"
PLATFORMS_DIR = "platforms"

TEMPLATE_FILES = {
    "fetch": "fetch_template.py.txt",
    "connector": "connector_template.py.txt",
    "scheduler": "scheduler_template.sh.txt",
}

def load_template(filename):
    path = os.path.join(TEMPLATES_DIR, filename)
    with open(path, "r", encoding="utf-8") as f:
        return f.read()

def save_file(path, content):
    with open(path, "w", encoding="utf-8") as f:
        f.write(content)

def generate_platform_files(platform_name, url, product_selector, title_selector, image_selector, price_selector, url_base):
    platform_name_lower = platform_name.lower()
    platform_name_cap = platform_name.capitalize()

    placeholders = {
        "{{platform}}": platform_name_lower,
        "{{platform_cap}}": platform_name_cap,
        "{{url}}": url,
        "{{product_selector}}": product_selector,
        "{{title_selector}}": title_selector,
        "{{image_selector}}": image_selector,
        "{{price_selector}}": price_selector,
        "{{url_base}}": url_base,
    }

    # Create platform folder
    platform_folder = os.path.join(PLATFORMS_DIR, platform_name_lower)
    os.makedirs(platform_folder, exist_ok=True)

    for key, template_file in TEMPLATE_FILES.items():
        template_content = load_template(template_file)

        for ph, val in placeholders.items():
            template_content = template_content.replace(ph, val)

        # Decide output filename
        if key == "fetch":
            filename = f"fetch_{platform_name_lower}_products.py"
        elif key == "connector":
            filename = f"{platform_name_lower}_connector.py"
        elif key == "scheduler":
            filename = f"{platform_name_lower}_scheduler.sh"
        else:
            filename = f"{platform_name_lower}_{key}.txt"

        save_path = os.path.join(platform_folder, filename)
        save_file(save_path, template_content)
        print(f"Generated {save_path}")

def main():
    print("=== Tara Dropship Template Generator ===")

    platform_name = input("Enter platform name (e.g. gosupps, zendrop): ").strip()
    url = input("Enter base URL for product listing: ").strip()
    product_selector = input("Enter product item CSS selector: ").strip()
    title_selector = input("Enter product title CSS selector (relative to product item): ").strip()
    image_selector = input("Enter product image CSS selector (relative to product item): ").strip()
    price_selector = input("Enter product price CSS selector (relative to product item): ").strip()

    url_base = input("Enter URL base (e.g. https://www.gosupps.com): ").strip()

    generate_platform_files(platform_name, url, product_selector, title_selector, image_selector, price_selector, url_base)

    print("\nâœ… Done! Check the platforms folder for your generated files.")

if __name__ == "__main__":
    main()